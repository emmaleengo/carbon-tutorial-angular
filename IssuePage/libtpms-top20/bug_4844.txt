#4844
src/tpm12/tpm_migration.c:3115: error: Buffer Overrun L3
  Offset added: [1, +oo] (⇐ [0, 65] + [1, +oo]) Size: [0, +oo] by call to `TPM_StoreAsymkey_Load`.

src/tpm12/tpm_migration.c:2942:5: Assignment
2940. 
2941.     printf("TPM_Process_CMK_CreateBlob: Ordinal Entry\n");
2942.     d1Decrypt = NULL;					/* freed @1 */
          ^
2943.     TPM_Migrationkeyauth_Init(&migrationKeyAuth);	/* freed @2 */
2944.     TPM_SizedBuffer_Init(&msaListBuffer);		/* freed @3 */

src/tpm12/tpm_migration.c:3113:2: Assignment
3111.     /* deserialize the stream to a TPM_STORE_ASYMKEY d1AsymKey */
3112.     if (returnCode == TPM_SUCCESS) {
3113. 	stream = d1Decrypt;
       ^
3114. 	stream_size = d1DecryptLength;
3115. 	returnCode = TPM_StoreAsymkey_Load(&d1AsymKey, FALSE,

src/tpm12/tpm_migration.c:3115:15: Call
3113. 	stream = d1Decrypt;
3114. 	stream_size = d1DecryptLength;
3115. 	returnCode = TPM_StoreAsymkey_Load(&d1AsymKey, FALSE,
                    ^
3116. 					   &stream, &stream_size,
3117. 					   NULL,	/* TPM_KEY_PARMS */

src/tpm12/tpm_key.c:2033:1: Parameter `stream`
  2031. */
  2032. 
  2033. TPM_RESULT TPM_StoreAsymkey_Load(TPM_STORE_ASYMKEY *tpm_store_asymkey,
        ^
  2034. 				 TPM_BOOL isEK,
  2035. 				 unsigned char **stream,	

src/tpm12/tpm_key.c:2076:7: Call
  2074.     /* load privKey - actually prime factor p */
  2075.     if (rc == 0) {
  2076. 	rc = TPM_SizedBuffer_Load((&(tpm_store_asymkey->privKey.p_key)),
              ^
  2077. 				  stream, stream_size);
  2078.     }

src/tpm12/tpm_sizedbuffer.c:83:14: Call
    81.     printf("  TPM_SizedBuffer_Load:\n");
    82.     if (rc == 0) {
    83.         rc = TPM_Load32(&(tpm_sized_buffer->size), stream, stream_size);
                     ^
    84.     }
    85.     /* if the size is not 0 */

src/tpm12/tpm_load.c:93:1: Parameter `tpm_uint32`
      91. */
      92. 
      93. TPM_RESULT TPM_Load32(uint32_t *tpm_uint32,
          ^
      94.                       unsigned char **stream,
      95.                       uint32_t *stream_size)

src/tpm12/tpm_sizedbuffer.c:93:18: Call
    91.         /* copy the buffer */
    92.         if (rc == 0) {
    93.             rc = TPM_Loadn(tpm_sized_buffer->buffer, tpm_sized_buffer->size, stream, stream_size);
                         ^
    94.         }
    95.     }

src/tpm12/tpm_load.c:202:1: <Offset trace>
200.    no endian adjustments. */
201. 
202. TPM_RESULT TPM_Loadn(BYTE *data,
     ^
203.                      size_t data_length,
204.                      unsigned char **stream,

src/tpm12/tpm_load.c:202:1: Parameter `data_length`
      200.    no endian adjustments. */
      201. 
      202. TPM_RESULT TPM_Loadn(BYTE *data,
           ^
      203.                      size_t data_length,
      204.                      unsigned char **stream,

src/tpm12/tpm_load.c:202:1: <Length trace>
200.    no endian adjustments. */
201. 
202. TPM_RESULT TPM_Loadn(BYTE *data,
     ^
203.                      size_t data_length,
204.                      unsigned char **stream,

src/tpm12/tpm_load.c:202:1: Parameter `stream`
      200.    no endian adjustments. */
      201. 
      202. TPM_RESULT TPM_Loadn(BYTE *data,
           ^
      203.                      size_t data_length,
      204.                      unsigned char **stream,

src/tpm12/tpm_load.c:218:9: Array access: Offset added: [1, +oo] (⇐ [0, 65] + [1, +oo]) Size: [0, +oo] by call to `TPM_StoreAsymkey_Load` 
      216.     /* load the parameter */
      217.     if (rc == 0) {
      218.         memcpy(data, *stream, data_length);
                   ^
      219.         *stream += data_length;
      220.         *stream_size -= data_length;
